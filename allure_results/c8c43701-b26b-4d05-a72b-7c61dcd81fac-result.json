{"name": "Проверка успешной авторизации пользователя", "status": "failed", "statusDetails": {"message": "AssertionError: assert (401 == 200)\n +  where 401 = <Response [401]>.status_code", "trace": "self = <test_login_user.TestLoginUser object at 0x00000212B3681F40>\n\n    @allure.title('Проверка успешной авторизации пользователя')\n    @allure.description('Создаем пользователя, авторизуемся с корректными e-mail и password, \\\n           проверяем, что код ответа: 200, и в тексте ответа \"success: true\"')\n    def test_login_user(self):\n        payload = generate_user_data()\n        requests.post(f'{Urls.main_url}{Urls.api_create_user}', data=payload)\n        del payload['name']\n        response = requests.post(f'{Urls.main_url}{Urls.api_login_user}', data=payload)\n>       assert response.status_code == 200 and response.json()['success'] == True\nE       assert (401 == 200)\nE        +  where 401 = <Response [401]>.status_code\n\ntests\\test_login_user.py:17: AssertionError"}, "description": "Создаем пользователя, авторизуемся с корректными e-mail и password,            проверяем, что код ответа: 200, и в тексте ответа \"success: true\"", "start": 1722593658226, "stop": 1722593658805, "uuid": "2632076d-a2ee-4db3-a572-9d8bae56e359", "historyId": "ece3a3a93c2c44357f41d39a990fabfd", "testCaseId": "ece3a3a93c2c44357f41d39a990fabfd", "fullName": "tests.test_login_user.TestLoginUser#test_login_user", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login_user"}, {"name": "subSuite", "value": "TestLoginUser"}, {"name": "host", "value": "InnaNB"}, {"name": "thread", "value": "7032-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login_user"}]}